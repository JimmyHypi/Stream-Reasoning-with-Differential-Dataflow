{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2","program":"C:\\Users\\xhimi\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","quick_xml","C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=31fd09ce0733b998","-C","extra-filename=-31fd09ce0733b998","--out-dir","c:\\Users\\xhimi\\Documents\\University\\THESIS\\Stream-Reasoning-with-Differential-Dataflow\\reasoning_service\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\xhimi\\Documents\\University\\THESIS\\Stream-Reasoning-with-Differential-Dataflow\\reasoning_service\\target\\rls\\debug\\deps","--extern","memchr=c:\\Users\\xhimi\\Documents\\University\\THESIS\\Stream-Reasoning-with-Differential-Dataflow\\reasoning_service\\target\\rls\\debug\\deps\\libmemchr-798d6d193747e53b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\xhimi\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\xhimi\\Documents\\University\\THESIS\\Stream-Reasoning-with-Differential-Dataflow\\reasoning_service\\target\\rls\\debug\\deps\\libquick_xml-31fd09ce0733b998.rmeta"},"prelude":{"crate_id":{"name":"quick_xml","disambiguator":[4271036180426663279,15365894943673844274]},"crate_root":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src","external_crates":[{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12578048494495979596,2047601184299498072]}},{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[9458200224090790355,13573932773036415113]}},{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17212932621614837670,6562776948220383497]}},{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[760535750034822653,11118367618612043106]}},{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9863315158332858256,17125058067034963864]}},{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[4687805557387852666,9943473115938981341]}},{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11895006708321731812,14562333644307237348]}},{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3795917533932740915,1352930594861700352]}},{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[14246119625412523820,1488400038702589601]}},{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[301469929213911528,4015090225475952437]}},{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[2057170103176572375,2047842178592089941]}},{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5373388065014169986,7291481803049279744]}},{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[11217907578908536000,17992819105755382748]}},{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\lib.rs","num":14,"id":{"name":"memchr","disambiguator":[2049996294631536636,14825760066116401943]}}],"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\lib.rs","byte_start":0,"byte_end":4653,"line_start":1,"line_end":136,"column_start":1,"column_end":24}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\lib.rs","byte_start":4590,"byte_end":4595,"line_start":134,"line_end":134,"column_start":18,"column_end":23},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\lib.rs","byte_start":4597,"byte_end":4603,"line_start":134,"line_end":134,"column_start":25,"column_end":31},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\lib.rs","byte_start":4622,"byte_end":4628,"line_start":135,"line_end":135,"column_start":17,"column_end":23},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":559},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\lib.rs","byte_start":4646,"byte_end":4652,"line_start":136,"line_end":136,"column_start":17,"column_end":23},"alias_span":null,"name":"Writer","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\lib.rs","byte_start":0,"byte_end":4653,"line_start":1,"line_end":136,"column_start":1,"column_end":24},"name":"","qualname":"::","value":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":24},{"krate":0,"index":45},{"krate":0,"index":213},{"krate":0,"index":351},{"krate":0,"index":353},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":378}],"decl_id":null,"docs":" High performance XML reader/writer.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\lib.rs","byte_start":4151,"byte_end":4173,"line_start":111,"line_end":111,"column_start":1,"column_end":23}},{"value":"recursion_limit = \"1024\"","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\lib.rs","byte_start":4174,"byte_end":4202,"line_start":112,"line_end":112,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\errors.rs","byte_start":4778,"byte_end":4780,"line_start":7,"line_end":7,"column_start":5,"column_end":7},"name":"Io","qualname":"::errors::Error::Io","value":"Error::Io(::std::io::Error)","parent":{"krate":0,"index":379},"children":[],"decl_id":null,"docs":" IO error\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\errors.rs","byte_start":4823,"byte_end":4827,"line_start":9,"line_end":9,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::errors::Error::Utf8","value":"Error::Utf8(::std::str::Utf8Error)","parent":{"krate":0,"index":379},"children":[],"decl_id":null,"docs":" Utf8 error\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\errors.rs","byte_start":4887,"byte_end":4900,"line_start":11,"line_end":11,"column_start":5,"column_end":18},"name":"UnexpectedEof","qualname":"::errors::Error::UnexpectedEof","value":"Error::UnexpectedEof(String)","parent":{"krate":0,"index":379},"children":[],"decl_id":null,"docs":" Unexpected End of File\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\errors.rs","byte_start":4941,"byte_end":4957,"line_start":13,"line_end":13,"column_start":5,"column_end":21},"name":"EndEventMismatch","qualname":"::errors::Error::EndEventMismatch","value":"Error::EndEventMismatch { expected, found }","parent":{"krate":0,"index":379},"children":[],"decl_id":null,"docs":" End event mismatch\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\errors.rs","byte_start":5104,"byte_end":5119,"line_start":20,"line_end":20,"column_start":5,"column_end":20},"name":"UnexpectedToken","qualname":"::errors::Error::UnexpectedToken","value":"Error::UnexpectedToken(String)","parent":{"krate":0,"index":379},"children":[],"decl_id":null,"docs":" Unexpected token\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\errors.rs","byte_start":5156,"byte_end":5170,"line_start":22,"line_end":22,"column_start":5,"column_end":19},"name":"UnexpectedBang","qualname":"::errors::Error::UnexpectedBang","value":"Error::UnexpectedBang","parent":{"krate":0,"index":379},"children":[],"decl_id":null,"docs":" Unexpected <!>\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\errors.rs","byte_start":5223,"byte_end":5235,"line_start":24,"line_end":24,"column_start":5,"column_end":17},"name":"TextNotFound","qualname":"::errors::Error::TextNotFound","value":"Error::TextNotFound","parent":{"krate":0,"index":379},"children":[],"decl_id":null,"docs":" Text not found, expected `Event::Text`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\errors.rs","byte_start":5302,"byte_end":5323,"line_start":26,"line_end":26,"column_start":5,"column_end":26},"name":"XmlDeclWithoutVersion","qualname":"::errors::Error::XmlDeclWithoutVersion","value":"Error::XmlDeclWithoutVersion(Option<String>)","parent":{"krate":0,"index":379},"children":[],"decl_id":null,"docs":" `Event::XmlDecl` must start with *version* attribute\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\errors.rs","byte_start":5383,"byte_end":5396,"line_start":28,"line_end":28,"column_start":5,"column_end":18},"name":"NameWithQuote","qualname":"::errors::Error::NameWithQuote","value":"Error::NameWithQuote(usize)","parent":{"krate":0,"index":379},"children":[],"decl_id":null,"docs":" Attribute Name contains quote\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\errors.rs","byte_start":5456,"byte_end":5469,"line_start":30,"line_end":30,"column_start":5,"column_end":18},"name":"NoEqAfterName","qualname":"::errors::Error::NoEqAfterName","value":"Error::NoEqAfterName(usize)","parent":{"krate":0,"index":379},"children":[],"decl_id":null,"docs":" Attribute key not followed by with `=`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\errors.rs","byte_start":5517,"byte_end":5530,"line_start":32,"line_end":32,"column_start":5,"column_end":18},"name":"UnquotedValue","qualname":"::errors::Error::UnquotedValue","value":"Error::UnquotedValue(usize)","parent":{"krate":0,"index":379},"children":[],"decl_id":null,"docs":" Attribute value not quoted\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\errors.rs","byte_start":5571,"byte_end":5590,"line_start":34,"line_end":34,"column_start":5,"column_end":24},"name":"DuplicatedAttribute","qualname":"::errors::Error::DuplicatedAttribute","value":"Error::DuplicatedAttribute(usize, usize)","parent":{"krate":0,"index":379},"children":[],"decl_id":null,"docs":" Duplicate attribute\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":415},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\errors.rs","byte_start":5631,"byte_end":5642,"line_start":36,"line_end":36,"column_start":5,"column_end":16},"name":"EscapeError","qualname":"::errors::Error::EscapeError","value":"Error::EscapeError(::escape::EscapeError)","parent":{"krate":0,"index":379},"children":[],"decl_id":null,"docs":" Escape error\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\errors.rs","byte_start":4749,"byte_end":4754,"line_start":5,"line_end":5,"column_start":10,"column_end":15},"name":"Error","qualname":"::errors::Error","value":"Error::{Io, Utf8, UnexpectedEof, EndEventMismatch, UnexpectedToken, UnexpectedBang, TextNotFound, XmlDeclWithoutVersion, NameWithQuote, NoEqAfterName, UnquotedValue, DuplicatedAttribute, EscapeError}","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":405},{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":415}],"decl_id":null,"docs":" The error type used by this crate.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\errors.rs","byte_start":6186,"byte_end":6192,"line_start":58,"line_end":58,"column_start":10,"column_end":16},"name":"Result","qualname":"::errors::Result","value":"::std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A specialized `Result` type where the error is hard-wired to [`Error`].","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":421},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\escape.rs","byte_start":12042,"byte_end":12056,"line_start":9,"line_end":9,"column_start":5,"column_end":19},"name":"EntityWithNull","qualname":"::escape::EscapeError::EntityWithNull","value":"EscapeError::EntityWithNull(::std::ops::Range<usize>)","parent":{"krate":0,"index":420},"children":[],"decl_id":null,"docs":" Entity with Null character\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":424},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\escape.rs","byte_start":12123,"byte_end":12141,"line_start":11,"line_end":11,"column_start":5,"column_end":23},"name":"UnrecognizedSymbol","qualname":"::escape::EscapeError::UnrecognizedSymbol","value":"EscapeError::UnrecognizedSymbol(::std::ops::Range<usize>, ::std::result::Result<String, ::std::string::FromUtf8Error>)","parent":{"krate":0,"index":420},"children":[],"decl_id":null,"docs":" Unrecognized escape symbol\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\escape.rs","byte_start":12291,"byte_end":12309,"line_start":16,"line_end":16,"column_start":5,"column_end":23},"name":"UnterminatedEntity","qualname":"::escape::EscapeError::UnterminatedEntity","value":"EscapeError::UnterminatedEntity(::std::ops::Range<usize>)","parent":{"krate":0,"index":420},"children":[],"decl_id":null,"docs":" Cannot find `;` after `&`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\escape.rs","byte_start":12377,"byte_end":12395,"line_start":18,"line_end":18,"column_start":5,"column_end":23},"name":"TooLongHexadecimal","qualname":"::escape::EscapeError::TooLongHexadecimal","value":"EscapeError::TooLongHexadecimal","parent":{"krate":0,"index":420},"children":[],"decl_id":null,"docs":" Cannot convert Hexa to utf8\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\escape.rs","byte_start":12452,"byte_end":12470,"line_start":20,"line_end":20,"column_start":5,"column_end":23},"name":"InvalidHexadecimal","qualname":"::escape::EscapeError::InvalidHexadecimal","value":"EscapeError::InvalidHexadecimal(char)","parent":{"krate":0,"index":420},"children":[],"decl_id":null,"docs":" Character is not a valid hexadecimal value\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\escape.rs","byte_start":12521,"byte_end":12535,"line_start":22,"line_end":22,"column_start":5,"column_end":19},"name":"TooLongDecimal","qualname":"::escape::EscapeError::TooLongDecimal","value":"EscapeError::TooLongDecimal","parent":{"krate":0,"index":420},"children":[],"decl_id":null,"docs":" Cannot convert decimal to hexa\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":438},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\escape.rs","byte_start":12588,"byte_end":12602,"line_start":24,"line_end":24,"column_start":5,"column_end":19},"name":"InvalidDecimal","qualname":"::escape::EscapeError::InvalidDecimal","value":"EscapeError::InvalidDecimal(char)","parent":{"krate":0,"index":420},"children":[],"decl_id":null,"docs":" Character is not a valid decimal value\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":420},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\escape.rs","byte_start":11989,"byte_end":12000,"line_start":7,"line_end":7,"column_start":10,"column_end":21},"name":"EscapeError","qualname":"::escape::EscapeError","value":"EscapeError::{EntityWithNull, UnrecognizedSymbol, UnterminatedEntity, TooLongHexadecimal, InvalidHexadecimal, TooLongDecimal, InvalidDecimal}","parent":null,"children":[{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":438}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"events","qualname":"::events","value":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":464},{"krate":0,"index":468},{"krate":0,"index":113},{"krate":0,"index":144},{"krate":0,"index":471},{"krate":0,"index":477},{"krate":0,"index":474},{"krate":0,"index":148},{"krate":0,"index":480},{"krate":0,"index":483},{"krate":0,"index":156},{"krate":0,"index":164},{"krate":0,"index":486},{"krate":0,"index":489},{"krate":0,"index":168},{"krate":0,"index":183},{"krate":0,"index":492},{"krate":0,"index":526},{"krate":0,"index":523},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":194},{"krate":0,"index":198},{"krate":0,"index":202},{"krate":0,"index":206},{"krate":0,"index":210}],"decl_id":null,"docs":" Defines zero-copy XML events used throughout this library.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\attributes.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"attributes","qualname":"::events::attributes","value":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\attributes.rs","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":443},{"krate":0,"index":450},{"krate":0,"index":59},{"krate":0,"index":453},{"krate":0,"index":461},{"krate":0,"index":457},{"krate":0,"index":64},{"krate":0,"index":71},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81}],"decl_id":null,"docs":" Xml Attributes module","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":443},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\attributes.rs","byte_start":42073,"byte_end":42083,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"Attributes","qualname":"::events::attributes::Attributes","value":"Attributes {  }","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449}],"decl_id":null,"docs":" Iterator over XML attributes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\attributes.rs","byte_start":42621,"byte_end":42624,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<Attributes>::new","value":"fn (buf: &'a [u8], pos: usize) -> Attributes<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new attribute iterator from a buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\attributes.rs","byte_start":42950,"byte_end":42954,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"html","qualname":"<Attributes>::html","value":"fn (buf: &'a [u8], pos: usize) -> Attributes<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new attribute iterator from a buffer, allowing HTML attribute syntax.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\attributes.rs","byte_start":43460,"byte_end":43471,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"with_checks","qualname":"<Attributes>::with_checks","value":"fn (&mut self, val: bool) -> &mut Attributes<'a>","parent":null,"children":[],"decl_id":null,"docs":" Changes whether attributes should be checked for uniqueness.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":453},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\attributes.rs","byte_start":44003,"byte_end":44012,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"Attribute","qualname":"::events::attributes::Attribute","value":"Attribute { key, value }","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":456}],"decl_id":null,"docs":" A struct representing a key/value XML attribute.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":455},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\attributes.rs","byte_start":44255,"byte_end":44258,"line_start":83,"line_end":83,"column_start":9,"column_end":12},"name":"key","qualname":"::events::attributes::Attribute::key","value":"&'a [u8]","parent":{"krate":0,"index":453},"children":[],"decl_id":null,"docs":" The key to uniquely define the attribute.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":456},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\attributes.rs","byte_start":44318,"byte_end":44323,"line_start":85,"line_end":85,"column_start":9,"column_end":14},"name":"value","qualname":"::events::attributes::Attribute::value","value":"std::borrow::Cow<'a, [u8]>","parent":{"krate":0,"index":453},"children":[],"decl_id":null,"docs":" The raw value of the attribute.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\attributes.rs","byte_start":44660,"byte_end":44675,"line_start":95,"line_end":95,"column_start":12,"column_end":27},"name":"unescaped_value","qualname":"<Attribute>::unescaped_value","value":"fn (&self) -> Result<Cow<[u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the unescaped value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\attributes.rs","byte_start":46112,"byte_end":46137,"line_start":126,"line_end":126,"column_start":12,"column_end":37},"name":"unescape_and_decode_value","qualname":"<Attribute>::unescape_and_decode_value","value":"fn <B> (&self, reader: &Reader<B>) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns the unescaped and decoded string value.","sig":null,"attributes":[{"value":"cfg(not (feature = \"encoding_rs\"))","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\attributes.rs","byte_start":46064,"byte_end":46100,"line_start":125,"line_end":125,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":464},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":20886,"byte_end":20896,"line_start":31,"line_end":31,"column_start":12,"column_end":22},"name":"BytesStart","qualname":"::events::BytesStart","value":"BytesStart {  }","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":467}],"decl_id":null,"docs":" Opening tag data (`Event::Start`), with optional attributes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":21315,"byte_end":21323,"line_start":45,"line_end":45,"column_start":12,"column_end":20},"name":"borrowed","qualname":"<BytesStart>::borrowed","value":"fn (content: &'a [u8], name_len: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesStart` from the given content (name + attributes).","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":21294,"byte_end":21303,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":21649,"byte_end":21662,"line_start":58,"line_end":58,"column_start":12,"column_end":25},"name":"borrowed_name","qualname":"<BytesStart>::borrowed_name","value":"fn (name: &'a [u8]) -> BytesStart<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesStart` from the given name.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":21628,"byte_end":21637,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":21885,"byte_end":21890,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"owned","qualname":"<BytesStart>::owned","value":"fn <C> (content: C, name_len: usize) -> BytesStart<'static>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesStart` from the given content (name + attributes)","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":21864,"byte_end":21873,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":22193,"byte_end":22203,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"owned_name","qualname":"<BytesStart>::owned_name","value":"fn <C> (name: C) -> BytesStart<'static>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesStart` from the given name","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":22172,"byte_end":22181,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":22463,"byte_end":22473,"line_start":86,"line_end":86,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<BytesStart>::into_owned","value":"fn (self) -> BytesStart<'static>","parent":null,"children":[],"decl_id":null,"docs":" Converts the event into an owned event.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":22663,"byte_end":22671,"line_start":91,"line_end":91,"column_start":12,"column_end":20},"name":"to_owned","qualname":"<BytesStart>::to_owned","value":"fn (&self) -> BytesStart<'static>","parent":null,"children":[],"decl_id":null,"docs":" Converts the event into an owned event without taking ownershiph of Event\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":23026,"byte_end":23041,"line_start":100,"line_end":100,"column_start":12,"column_end":27},"name":"with_attributes","qualname":"<BytesStart>::with_attributes","value":"fn <'b, I> (mut self, attributes: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and yield a new `BytesStart` with additional attributes from an iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":23304,"byte_end":23308,"line_start":111,"line_end":111,"column_start":12,"column_end":16},"name":"name","qualname":"<BytesStart>::name","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Gets the undecoded raw tag name as a `&[u8]`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":23283,"byte_end":23292,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":23578,"byte_end":23588,"line_start":119,"line_end":119,"column_start":12,"column_end":22},"name":"local_name","qualname":"<BytesStart>::local_name","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Gets the undecoded raw local tag name (excluding namespace) as a `&[u8]`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":23557,"byte_end":23566,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":23894,"byte_end":23903,"line_start":129,"line_end":129,"column_start":12,"column_end":21},"name":"unescaped","qualname":"<BytesStart>::unescaped","value":"fn (&self) -> Result<Cow<[u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Gets the unescaped tag name.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":23873,"byte_end":23882,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":24070,"byte_end":24080,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"attributes","qualname":"<BytesStart>::attributes","value":"fn (&self) -> Attributes","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the attributes of this tag.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":24267,"byte_end":24282,"line_start":139,"line_end":139,"column_start":12,"column_end":27},"name":"html_attributes","qualname":"<BytesStart>::html_attributes","value":"fn (&self) -> Attributes","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the HTML-like attributes of this tag (no mandatory quotes or `=`).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":24585,"byte_end":24602,"line_start":148,"line_end":148,"column_start":12,"column_end":29},"name":"extend_attributes","qualname":"<BytesStart>::extend_attributes","value":"fn <'b, I> (&mut self, attributes: I) -> &mut BytesStart<'a>","parent":null,"children":[],"decl_id":null,"docs":" Add additional attributes to this tag using an iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":26141,"byte_end":26160,"line_start":187,"line_end":187,"column_start":12,"column_end":31},"name":"unescape_and_decode","qualname":"<BytesStart>::unescape_and_decode","value":"fn <B> (&self, reader: &Reader<B>) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns the unescaped and decoded string value.","sig":null,"attributes":[{"value":"cfg(not (feature = \"encoding_rs\"))","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":26079,"byte_end":26115,"line_start":185,"line_end":185,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":26120,"byte_end":26129,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":26374,"byte_end":26388,"line_start":193,"line_end":193,"column_start":12,"column_end":26},"name":"push_attribute","qualname":"<BytesStart>::push_attribute","value":"fn <'b, A> (&mut self, attr: A) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds an attribute to this element.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":26834,"byte_end":26842,"line_start":208,"line_end":208,"column_start":12,"column_end":20},"name":"set_name","qualname":"<BytesStart>::set_name","value":"fn (&mut self, name: &[u8]) -> &mut BytesStart<'a>","parent":null,"children":[],"decl_id":null,"docs":" Edit the name of the BytesStart in-place","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":27108,"byte_end":27124,"line_start":216,"line_end":216,"column_start":12,"column_end":28},"name":"clear_attributes","qualname":"<BytesStart>::clear_attributes","value":"fn (&mut self) -> &mut BytesStart<'a>","parent":null,"children":[],"decl_id":null,"docs":" Remove all attributes from the ByteStart\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":471},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":27717,"byte_end":27726,"line_start":236,"line_end":236,"column_start":12,"column_end":21},"name":"BytesDecl","qualname":"::events::BytesDecl","value":"BytesDecl {  }","parent":null,"children":[{"krate":0,"index":473}],"decl_id":null,"docs":" An XML declaration (`Event::Decl`).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":27851,"byte_end":27861,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"from_start","qualname":"<BytesDecl>::from_start","value":"fn (start: BytesStart<'a>) -> BytesDecl<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BytesDecl` from a `BytesStart`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":28011,"byte_end":28018,"line_start":247,"line_end":247,"column_start":12,"column_end":19},"name":"version","qualname":"<BytesDecl>::version","value":"fn (&self) -> Result<Cow<[u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Gets xml version, including quotes (' or \")\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":28648,"byte_end":28656,"line_start":264,"line_end":264,"column_start":12,"column_end":20},"name":"encoding","qualname":"<BytesDecl>::encoding","value":"fn (&self) -> Option<Result<Cow<[u8]>>>","parent":null,"children":[],"decl_id":null,"docs":" Gets xml encoding, including quotes (' or \")\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":29085,"byte_end":29095,"line_start":279,"line_end":279,"column_start":12,"column_end":22},"name":"standalone","qualname":"<BytesDecl>::standalone","value":"fn (&self) -> Option<Result<Cow<[u8]>>>","parent":null,"children":[],"decl_id":null,"docs":" Gets xml standalone, including quotes (' or \")\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":29968,"byte_end":29971,"line_start":300,"line_end":300,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesDecl>::new","value":"fn (version: &[u8], encoding: Option<&[u8]>, standalone: Option<&[u8]>) -> BytesDecl<'static>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `XmlDecl` from the (mandatory) _version_ (should be `1.0` or `1.1`),\n the optional _encoding_ (e.g., `UTF-8`) and the optional _standalone_ (`yes` or `no`)\n attribute.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":31448,"byte_end":31458,"line_start":349,"line_end":349,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<BytesDecl>::into_owned","value":"fn (self) -> BytesDecl<'static>","parent":null,"children":[],"decl_id":null,"docs":" Converts the event into an owned event.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":31647,"byte_end":31655,"line_start":358,"line_end":358,"column_start":12,"column_end":20},"name":"BytesEnd","qualname":"::events::BytesEnd","value":"BytesEnd {  }","parent":null,"children":[{"krate":0,"index":482}],"decl_id":null,"docs":" A struct to manage `Event::End` events\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":31790,"byte_end":31798,"line_start":365,"line_end":365,"column_start":12,"column_end":20},"name":"borrowed","qualname":"<BytesEnd>::borrowed","value":"fn (name: &'a [u8]) -> BytesEnd<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesEnd` borrowing a slice\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":31769,"byte_end":31778,"line_start":364,"line_end":364,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":31982,"byte_end":31987,"line_start":373,"line_end":373,"column_start":12,"column_end":17},"name":"owned","qualname":"<BytesEnd>::owned","value":"fn (name: Vec<u8>) -> BytesEnd<'static>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesEnd` owning its name\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":31961,"byte_end":31970,"line_start":372,"line_end":372,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":32157,"byte_end":32167,"line_start":380,"line_end":380,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<BytesEnd>::into_owned","value":"fn (self) -> BytesEnd<'static>","parent":null,"children":[],"decl_id":null,"docs":" Converts the event into an owned event.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":32347,"byte_end":32351,"line_start":388,"line_end":388,"column_start":12,"column_end":16},"name":"name","qualname":"<BytesEnd>::name","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Gets `BytesEnd` event name\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":32326,"byte_end":32335,"line_start":387,"line_end":387,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":32630,"byte_end":32640,"line_start":396,"line_end":396,"column_start":12,"column_end":22},"name":"local_name","qualname":"<BytesEnd>::local_name","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" local name (excluding namespace) as &[u8] (without eventual attributes)\n returns the name() with any leading namespace removed (all content up to\n and including the first ':' character)\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":32609,"byte_end":32618,"line_start":395,"line_end":395,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":33190,"byte_end":33199,"line_start":417,"line_end":417,"column_start":12,"column_end":21},"name":"BytesText","qualname":"::events::BytesText","value":"BytesText {  }","parent":null,"children":[{"krate":0,"index":488}],"decl_id":null,"docs":" Data from various events (most notably, `Event::Text`).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":33401,"byte_end":33413,"line_start":425,"line_end":425,"column_start":12,"column_end":24},"name":"from_escaped","qualname":"<BytesText>::from_escaped","value":"fn <C> (content: C) -> BytesText<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesText` from an escaped byte sequence.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":33380,"byte_end":33389,"line_start":424,"line_end":424,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":33681,"byte_end":33691,"line_start":434,"line_end":434,"column_start":12,"column_end":22},"name":"from_plain","qualname":"<BytesText>::from_plain","value":"fn (content: &'a [u8]) -> BytesText<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesText` from a byte sequence. The byte sequence is\n expected not to be escaped.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":33660,"byte_end":33669,"line_start":433,"line_end":433,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":33888,"byte_end":33904,"line_start":442,"line_end":442,"column_start":12,"column_end":28},"name":"from_escaped_str","qualname":"<BytesText>::from_escaped_str","value":"fn <C> (content: C) -> BytesText<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesText` from an escaped string.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":33867,"byte_end":33876,"line_start":441,"line_end":441,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":34269,"byte_end":34283,"line_start":452,"line_end":452,"column_start":12,"column_end":26},"name":"from_plain_str","qualname":"<BytesText>::from_plain_str","value":"fn (content: &'a str) -> BytesText<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesText` from a string. The string is expected not to\n be escaped.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":34248,"byte_end":34257,"line_start":451,"line_end":451,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":34491,"byte_end":34501,"line_start":459,"line_end":459,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<BytesText>::into_owned","value":"fn (self) -> BytesText<'static>","parent":null,"children":[],"decl_id":null,"docs":" Ensures that all data is owned to extend the object's lifetime if\n necessary.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":34470,"byte_end":34479,"line_start":458,"line_end":458,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":34848,"byte_end":34857,"line_start":469,"line_end":469,"column_start":12,"column_end":21},"name":"unescaped","qualname":"<BytesText>::unescaped","value":"fn (&self) -> Result<Cow<[u8]>>","parent":null,"children":[],"decl_id":null,"docs":" gets escaped content","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":35719,"byte_end":35738,"line_start":491,"line_end":491,"column_start":12,"column_end":31},"name":"unescape_and_decode","qualname":"<BytesText>::unescape_and_decode","value":"fn <B> (&self, reader: &Reader<B>) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" helper method to unescape then decode self using the reader encoding","sig":null,"attributes":[{"value":"cfg(not (feature = \"encoding_rs\"))","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":35671,"byte_end":35707,"line_start":490,"line_end":490,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":35939,"byte_end":35946,"line_start":497,"line_end":497,"column_start":12,"column_end":19},"name":"escaped","qualname":"<BytesText>::escaped","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Gets escaped content.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":36521,"byte_end":36526,"line_start":518,"line_end":518,"column_start":5,"column_end":10},"name":"Start","qualname":"::events::Event::Start","value":"Event::Start(BytesStart<'a>)","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" Start tag (with attributes) `<tag attr=\"value\">`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":36574,"byte_end":36577,"line_start":520,"line_end":520,"column_start":5,"column_end":8},"name":"End","qualname":"::events::Event::End","value":"Event::End(BytesEnd<'a>)","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" End tag `</tag>`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":500},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":36665,"byte_end":36670,"line_start":522,"line_end":522,"column_start":5,"column_end":10},"name":"Empty","qualname":"::events::Event::Empty","value":"Event::Empty(BytesStart<'a>)","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" Empty element tag (with attributes) `<tag attr=\"value\" />`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":36750,"byte_end":36754,"line_start":524,"line_end":524,"column_start":5,"column_end":9},"name":"Text","qualname":"::events::Event::Text","value":"Event::Text(BytesText<'a>)","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" Character data between `Start` and `End` element.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":36807,"byte_end":36814,"line_start":526,"line_end":526,"column_start":5,"column_end":12},"name":"Comment","qualname":"::events::Event::Comment","value":"Event::Comment(BytesText<'a>)","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" Comment `<!-- ... -->`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":36868,"byte_end":36873,"line_start":528,"line_end":528,"column_start":5,"column_end":10},"name":"CData","qualname":"::events::Event::CData","value":"Event::CData(BytesText<'a>)","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" CData `<![CDATA[...]]>`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":36933,"byte_end":36937,"line_start":530,"line_end":530,"column_start":5,"column_end":9},"name":"Decl","qualname":"::events::Event::Decl","value":"Event::Decl(BytesDecl<'a>)","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" XML declaration `<?xml ...?>`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":37000,"byte_end":37002,"line_start":532,"line_end":532,"column_start":5,"column_end":7},"name":"PI","qualname":"::events::Event::PI","value":"Event::PI(BytesText<'a>)","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" Processing instruction `<?...?>`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":37056,"byte_end":37063,"line_start":534,"line_end":534,"column_start":5,"column_end":12},"name":"DocType","qualname":"::events::Event::DocType","value":"Event::DocType(BytesText<'a>)","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" Doctype `<!DOCTYPE...>`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":37113,"byte_end":37116,"line_start":536,"line_end":536,"column_start":5,"column_end":8},"name":"Eof","qualname":"::events::Event::Eof","value":"Event::Eof","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" End of XML document.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":36447,"byte_end":36452,"line_start":516,"line_end":516,"column_start":10,"column_end":15},"name":"Event","qualname":"::events::Event","value":"Event::{Start, End, Empty, Text, Comment, CData, Decl, PI, DocType, Eof}","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":521}],"decl_id":null,"docs":" Event emitted by [`Reader::read_event`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":37302,"byte_end":37312,"line_start":542,"line_end":542,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<Event>::into_owned","value":"fn (self) -> Event<'static>","parent":null,"children":[],"decl_id":null,"docs":" Converts the event to an owned version, untied to the lifetime of\n buffer used when reading but incurring a new, seperate allocation.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":55817,"byte_end":55823,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"name":"Reader","qualname":"::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253}],"decl_id":null,"docs":" A low level encoding-agnostic XML event reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":56980,"byte_end":56991,"line_start":95,"line_end":95,"column_start":12,"column_end":23},"name":"from_reader","qualname":"<Reader<B>>::from_reader","value":"fn (reader: B) -> Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Reader` that reads from a reader implementing `BufRead`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":58151,"byte_end":58172,"line_start":124,"line_end":124,"column_start":12,"column_end":33},"name":"expand_empty_elements","qualname":"<Reader<B>>::expand_empty_elements","value":"fn (&mut self, val: bool) -> &mut Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Changes whether empty elements should be split into an `Open` and a `Close` event.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":58594,"byte_end":58603,"line_start":137,"line_end":137,"column_start":12,"column_end":21},"name":"trim_text","qualname":"<Reader<B>>::trim_text","value":"fn (&mut self, val: bool) -> &mut Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Changes whether whitespace before and after character data should be removed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":59211,"byte_end":59244,"line_start":153,"line_end":153,"column_start":12,"column_end":45},"name":"trim_markup_names_in_closing_tags","qualname":"<Reader<B>>::trim_markup_names_in_closing_tags","value":"fn (&mut self, val: bool) -> &mut Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Changes wether trailing whitespaces after the markup name are trimmed in closing tags\n `</a >`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":59969,"byte_end":59984,"line_start":171,"line_end":171,"column_start":12,"column_end":27},"name":"check_end_names","qualname":"<Reader<B>>::check_end_names","value":"fn (&mut self, val: bool) -> &mut Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Changes whether mismatched closing tag names should be detected.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":60572,"byte_end":60586,"line_start":186,"line_end":186,"column_start":12,"column_end":26},"name":"check_comments","qualname":"<Reader<B>>::check_comments","value":"fn (&mut self, val: bool) -> &mut Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Changes whether comments should be validated.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":60799,"byte_end":60814,"line_start":194,"line_end":194,"column_start":12,"column_end":27},"name":"buffer_position","qualname":"<Reader<B>>::buffer_position","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the current byte position in the input data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":74693,"byte_end":74703,"line_start":531,"line_end":531,"column_start":12,"column_end":22},"name":"read_event","qualname":"<Reader<B>>::read_event","value":"fn <'a, 'b> (&'a mut self, buf: &'b mut Vec<u8>) -> Result<Event<'b>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the next `Event`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":75675,"byte_end":75690,"line_start":553,"line_end":553,"column_start":12,"column_end":27},"name":"event_namespace","qualname":"<Reader<B>>::event_namespace","value":"fn <'a, 'b, 'c> (&'a self, qname: &'b [u8], namespace_buffer: &'c [u8]) -> (Option<&'c [u8]>, &'b [u8])","parent":null,"children":[],"decl_id":null,"docs":" Resolves a potentially qualified **event name** into (namespace name, local name).","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":75654,"byte_end":75663,"line_start":552,"line_end":552,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":76410,"byte_end":76429,"line_start":570,"line_end":570,"column_start":12,"column_end":31},"name":"attribute_namespace","qualname":"<Reader<B>>::attribute_namespace","value":"fn <'a, 'b, 'c> (&'a self, qname: &'b [u8], namespace_buffer: &'c [u8]) -> (Option<&'c [u8]>, &'b [u8])","parent":null,"children":[],"decl_id":null,"docs":" Resolves a potentially qualified **attribute name** into (namespace name, local name).","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":76389,"byte_end":76398,"line_start":569,"line_end":569,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":78357,"byte_end":78378,"line_start":621,"line_end":621,"column_start":12,"column_end":33},"name":"read_namespaced_event","qualname":"<Reader<B>>::read_namespaced_event","value":"fn <'a, 'b, 'c> (&'a mut self, buf: &'b mut Vec<u8>, namespace_buffer: &'c mut Vec<u8>) -> Result<(Option<&'c [u8]>, Event<'b>)>","parent":null,"children":[],"decl_id":null,"docs":" Reads the next event and resolves its namespace (if applicable).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":81565,"byte_end":81571,"line_start":702,"line_end":702,"column_start":12,"column_end":18},"name":"decode","qualname":"<Reader<B>>::decode","value":"fn <'c> (&self, bytes: &'c [u8]) -> Result<&'c str>","parent":null,"children":[],"decl_id":null,"docs":" Decodes a UTF8 slice regarless of XML declaration.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":81506,"byte_end":81515,"line_start":700,"line_end":700,"column_start":5,"column_end":14}},{"value":"cfg(not (feature = \"encoding\"))","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":81520,"byte_end":81553,"line_start":701,"line_end":701,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":81917,"byte_end":81924,"line_start":716,"line_end":716,"column_start":12,"column_end":19},"name":"decoder","qualname":"<Reader<B>>::decoder","value":"fn (&self) -> Decoder","parent":null,"children":[],"decl_id":null,"docs":" Get utf8 decoder\n","sig":null,"attributes":[{"value":"cfg(not (feature = \"encoding\"))","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":81872,"byte_end":81905,"line_start":715,"line_end":715,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":82108,"byte_end":82119,"line_start":723,"line_end":723,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"<Reader<B>>::read_to_end","value":"fn <K> (&mut self, end: K, buf: &mut Vec<u8>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Reads until end element is found","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":84072,"byte_end":84081,"line_start":779,"line_end":779,"column_start":12,"column_end":21},"name":"read_text","qualname":"<Reader<B>>::read_text","value":"fn <K> (&mut self, end: K, buf: &mut Vec<u8>) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Reads optional text between start and end tags.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":86380,"byte_end":86402,"line_start":843,"line_end":843,"column_start":12,"column_end":34},"name":"into_underlying_reader","qualname":"<Reader<B>>::into_underlying_reader","value":"fn (self) -> B","parent":null,"children":[],"decl_id":null,"docs":" Consumes `Reader` returning the underlying reader","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":86535,"byte_end":86544,"line_start":850,"line_end":850,"column_start":12,"column_end":21},"name":"from_file","qualname":"<Reader<BufReader<File>>>::from_file","value":"fn <P> (path: P) -> Result<Reader<BufReader<File>>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an XML reader from a file path.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":86846,"byte_end":86854,"line_start":859,"line_end":859,"column_start":12,"column_end":20},"name":"from_str","qualname":"<Reader<&'a [u8]>>::from_str","value":"fn (s: &'a str) -> Reader<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Creates an XML reader from a string slice.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":97609,"byte_end":97616,"line_start":1151,"line_end":1151,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::reader::Decoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" Utf8 Decoder\n","sig":null,"attributes":[{"value":"cfg(not (feature = \"encoding\"))","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":97541,"byte_end":97574,"line_start":1149,"line_end":1149,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":97809,"byte_end":97815,"line_start":1162,"line_end":1162,"column_start":12,"column_end":18},"name":"decode","qualname":"<Decoder>::decode","value":"fn <'c> (&self, bytes: &'c [u8]) -> Result<&'c str>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not (feature = \"encoding\"))","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":97764,"byte_end":97797,"line_start":1161,"line_end":1161,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":559},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\writer.rs","byte_start":101591,"byte_end":101597,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"Writer","qualname":"::writer::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":562}],"decl_id":null,"docs":" XML writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\writer.rs","byte_start":101771,"byte_end":101774,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"new","qualname":"<Writer<W>>::new","value":"fn (inner: W) -> Writer<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Writer from a generic Write\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\writer.rs","byte_start":101979,"byte_end":101994,"line_start":76,"line_end":76,"column_start":12,"column_end":27},"name":"new_with_indent","qualname":"<Writer<W>>::new_with_indent","value":"fn (inner: W, indent_char: u8, indent_size: usize) -> Writer<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Writer with configured whitespace indents from a generic Write\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\writer.rs","byte_start":102264,"byte_end":102274,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Writer<W>>::into_inner","value":"fn (self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Writer`, returning the underlying writer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\writer.rs","byte_start":102370,"byte_end":102375,"line_start":89,"line_end":89,"column_start":12,"column_end":17},"name":"inner","qualname":"<Writer<W>>::inner","value":"fn (&mut self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Get inner writer, keeping ownership\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\writer.rs","byte_start":102499,"byte_end":102510,"line_start":94,"line_end":94,"column_start":12,"column_end":23},"name":"write_event","qualname":"<Writer<W>>::write_event","value":"fn <'a, E> (&mut self, event: E) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Writes the given event to the underlying writer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\writer.rs","byte_start":103931,"byte_end":103936,"line_start":130,"line_end":130,"column_start":12,"column_end":17},"name":"write","qualname":"<Writer<W>>::write","value":"fn (&mut self, value: &[u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Writes bytes\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\writer.rs","byte_start":103910,"byte_end":103919,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\errors.rs","byte_start":5702,"byte_end":5707,"line_start":39,"line_end":39,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\errors.rs","byte_start":5898,"byte_end":5903,"line_start":47,"line_end":47,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\errors.rs","byte_start":6259,"byte_end":6264,"line_start":60,"line_end":60,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\errors.rs","byte_start":8259,"byte_end":8264,"line_start":109,"line_end":109,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\escape.rs","byte_start":12640,"byte_end":12651,"line_start":27,"line_end":27,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\escape.rs","byte_start":13843,"byte_end":13854,"line_start":55,"line_end":55,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\attributes.rs","byte_start":42537,"byte_end":42547,"line_start":33,"line_end":33,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\attributes.rs","byte_start":44352,"byte_end":44361,"line_start":88,"line_end":88,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\attributes.rs","byte_start":46334,"byte_end":46343,"line_start":132,"line_end":132,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\attributes.rs","byte_start":46703,"byte_end":46712,"line_start":144,"line_end":144,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\attributes.rs","byte_start":47318,"byte_end":47327,"line_start":164,"line_end":164,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\attributes.rs","byte_start":47913,"byte_end":47923,"line_start":184,"line_end":184,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":21095,"byte_end":21105,"line_start":38,"line_end":38,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":27263,"byte_end":27273,"line_start":222,"line_end":222,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":27774,"byte_end":27783,"line_start":240,"line_end":240,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":31699,"byte_end":31707,"line_start":362,"line_end":362,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":32853,"byte_end":32861,"line_start":405,"line_end":405,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":33295,"byte_end":33304,"line_start":422,"line_end":422,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":36033,"byte_end":36042,"line_start":502,"line_end":502,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":37130,"byte_end":37135,"line_start":539,"line_end":539,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":37979,"byte_end":37989,"line_start":558,"line_end":558,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":38098,"byte_end":38107,"line_start":565,"line_end":565,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":38220,"byte_end":38228,"line_start":572,"line_end":572,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":38338,"byte_end":38347,"line_start":579,"line_end":579,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":38460,"byte_end":38465,"line_start":586,"line_end":586,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":38968,"byte_end":38973,"line_start":603,"line_end":603,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":56881,"byte_end":56887,"line_start":93,"line_end":93,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":270},{"krate":0,"index":273},{"krate":0,"index":278},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":298},{"krate":0,"index":302},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":311},{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":86450,"byte_end":86456,"line_start":848,"line_end":848,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":86765,"byte_end":86771,"line_start":857,"line_end":857,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":92004,"byte_end":92013,"line_start":1000,"line_end":1000,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":93537,"byte_end":93557,"line_start":1042,"line_end":1042,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":97750,"byte_end":97757,"line_start":1160,"line_end":1160,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\writer.rs","byte_start":101702,"byte_end":101708,"line_start":66,"line_end":66,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\writer.rs","byte_start":104770,"byte_end":104781,"line_start":159,"line_end":159,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\lib.rs","byte_start":4408,"byte_end":4414,"line_start":124,"line_end":124,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":45}},{"kind":"Mod","span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":20139,"byte_end":20149,"line_start":3,"line_end":3,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":46}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\errors.rs","byte_start":5702,"byte_end":5707,"line_start":39,"line_end":39,"column_start":33,"column_end":38},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":379},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\errors.rs","byte_start":5898,"byte_end":5903,"line_start":47,"line_end":47,"column_start":38,"column_end":43},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":379},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\errors.rs","byte_start":6259,"byte_end":6264,"line_start":60,"line_end":60,"column_start":28,"column_end":33},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":379},"to":{"krate":2,"index":7491}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\errors.rs","byte_start":8259,"byte_end":8264,"line_start":109,"line_end":109,"column_start":28,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":379},"to":{"krate":1,"index":1623}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\escape.rs","byte_start":12640,"byte_end":12651,"line_start":27,"line_end":27,"column_start":28,"column_end":39},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":420},"to":{"krate":2,"index":7491}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\escape.rs","byte_start":13843,"byte_end":13854,"line_start":55,"line_end":55,"column_start":28,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":420},"to":{"krate":1,"index":1623}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\attributes.rs","byte_start":42537,"byte_end":42547,"line_start":33,"line_end":33,"column_start":10,"column_end":20},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\attributes.rs","byte_start":44352,"byte_end":44361,"line_start":88,"line_end":88,"column_start":10,"column_end":19},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\attributes.rs","byte_start":46334,"byte_end":46343,"line_start":132,"line_end":132,"column_start":30,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":453},"to":{"krate":2,"index":7486}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\attributes.rs","byte_start":46703,"byte_end":46712,"line_start":144,"line_end":144,"column_start":41,"column_end":50},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":453},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\attributes.rs","byte_start":47318,"byte_end":47327,"line_start":164,"line_end":164,"column_start":39,"column_end":48},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":453},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\attributes.rs","byte_start":47913,"byte_end":47923,"line_start":184,"line_end":184,"column_start":23,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":443},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":21095,"byte_end":21105,"line_start":38,"line_end":38,"column_start":10,"column_end":20},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":27263,"byte_end":27273,"line_start":222,"line_end":222,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":464},"to":{"krate":2,"index":7486}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":27774,"byte_end":27783,"line_start":240,"line_end":240,"column_start":10,"column_end":19},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":31699,"byte_end":31707,"line_start":362,"line_end":362,"column_start":10,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":32853,"byte_end":32861,"line_start":405,"line_end":405,"column_start":30,"column_end":38},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":480},"to":{"krate":2,"index":7486}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":33295,"byte_end":33304,"line_start":422,"line_end":422,"column_start":10,"column_end":19},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":36033,"byte_end":36042,"line_start":502,"line_end":502,"column_start":30,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":486},"to":{"krate":2,"index":7486}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":37130,"byte_end":37135,"line_start":539,"line_end":539,"column_start":10,"column_end":15},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":37979,"byte_end":37989,"line_start":558,"line_end":558,"column_start":20,"column_end":30},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":464},"to":{"krate":2,"index":1703}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":38098,"byte_end":38107,"line_start":565,"line_end":565,"column_start":20,"column_end":29},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":471},"to":{"krate":2,"index":1703}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":38220,"byte_end":38228,"line_start":572,"line_end":572,"column_start":20,"column_end":28},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":480},"to":{"krate":2,"index":1703}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":38338,"byte_end":38347,"line_start":579,"line_end":579,"column_start":20,"column_end":29},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":486},"to":{"krate":2,"index":1703}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":38460,"byte_end":38465,"line_start":586,"line_end":586,"column_start":20,"column_end":25},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":492},"to":{"krate":2,"index":1703}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\events\\mod.rs","byte_start":38968,"byte_end":38973,"line_start":603,"line_end":603,"column_start":31,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":492},"to":{"krate":2,"index":2212}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":56881,"byte_end":56887,"line_start":93,"line_end":93,"column_start":18,"column_end":24},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":86450,"byte_end":86456,"line_start":848,"line_end":848,"column_start":6,"column_end":12},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":86765,"byte_end":86771,"line_start":857,"line_end":857,"column_start":10,"column_end":16},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":92004,"byte_end":92013,"line_start":1000,"line_end":1000,"column_start":6,"column_end":15},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":93537,"byte_end":93557,"line_start":1042,"line_end":1042,"column_start":6,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\reader.rs","byte_start":97750,"byte_end":97757,"line_start":1160,"line_end":1160,"column_start":6,"column_end":13},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\writer.rs","byte_start":101702,"byte_end":101708,"line_start":66,"line_end":66,"column_start":16,"column_end":22},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":559},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\xhimi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quick-xml-0.17.2\\src\\writer.rs","byte_start":104770,"byte_end":104781,"line_start":159,"line_end":159,"column_start":6,"column_end":17},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":566},"to":{"krate":4294967295,"index":4294967295}}]}